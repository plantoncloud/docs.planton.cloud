"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3820],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>m});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),a=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},d=function(e){var t=a(e.components);return n.createElement(i.Provider,{value:t},e.children)},u="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,c=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=a(r),f=o,m=u["".concat(i,".").concat(f)]||u[f]||s[f]||c;return r?n.createElement(m,p(p({ref:t},d),{},{components:r})):n.createElement(m,p({ref:t},d))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=r.length,p=new Array(c);p[0]=f;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[u]="string"==typeof e?e:o,p[1]=l;for(var a=2;a<c;a++)p[a]=r[a];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},25845:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>p,default:()=>s,frontMatter:()=>c,metadata:()=>l,toc:()=>a});var n=r(87462),o=(r(67294),r(3905));const c={title:"",slug:"/cli//planton/product/code/project/list",sidebar_label:"list"},p=void 0,l={unversionedId:"cli/planton/product/code/project/list",id:"cli/planton/product/code/project/list",title:"",description:"planton product code project list",source:"@site/docs/99-cli/planton/product/code/project/list.md",sourceDirName:"99-cli/planton/product/code/project",slug:"/cli//planton/product/code/project/list",permalink:"/cli/planton/product/code/project/list",draft:!1,tags:[],version:"current",frontMatter:{title:"",slug:"/cli//planton/product/code/project/list",sidebar_label:"list"},sidebar:"defaultSidebar",previous:{title:"get",permalink:"/cli/planton/product/code/project/get"},next:{title:"pipelines",permalink:"/cli/planton/product/code/project/pipelines"}},i={},a=[{value:"planton product code project list",id:"planton-product-code-project-list",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3}],d={toc:a},u="wrapper";function s(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"planton-product-code-project-list"},"planton product code project list"),(0,o.kt)("p",null,"list all code projects that belong to a product"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"planton product code project list [flags]\n")),(0,o.kt)("h3",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"  -h, --help   help for list\n")),(0,o.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"      --code-project-id string   id of the code project on planton cloud\n      --debug                    set log level to debug\n      --dry                      dry run gitr commands\n      --product-env-id string    id of the product environment\n      --product-id string        id of the product on planton cloud\n      --product-key string       key of the product\n")))}s.isMDXComponent=!0}}]);