"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9478],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>f});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),a=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=a(e.components);return n.createElement(p.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,c=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),s=a(r),m=o,f=s["".concat(p,".").concat(m)]||s[m]||u[m]||c;return r?n.createElement(f,i(i({ref:t},d),{},{components:r})):n.createElement(f,i({ref:t},d))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=r.length,i=new Array(c);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[s]="string"==typeof e?e:o,i[1]=l;for(var a=2;a<c;a++)i[a]=r[a];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},69672:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>c,metadata:()=>l,toc:()=>a});var n=r(87462),o=(r(67294),r(3905));const c={title:"",slug:"/cli//planton/product/microservice/deployment/config",sidebar_label:"config"},i=void 0,l={unversionedId:"cli/planton/product/microservice/deployment/config",id:"cli/planton/product/microservice/deployment/config",title:"",description:"planton product microservice deployment config",source:"@site/docs/99-cli/planton/product/microservice/deployment/config.md",sourceDirName:"99-cli/planton/product/microservice/deployment",slug:"/cli//planton/product/microservice/deployment/config",permalink:"/cli/planton/product/microservice/deployment/config",draft:!1,tags:[],version:"current",frontMatter:{title:"",slug:"/cli//planton/product/microservice/deployment/config",sidebar_label:"config"},sidebar:"defaultSidebar",previous:{title:"delete",permalink:"/cli/planton/product/microservice/delete"},next:{title:"create",permalink:"/cli/planton/product/microservice/deployment/create"}},p={},a=[{value:"planton product microservice deployment config",id:"planton-product-microservice-deployment-config",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3}],d={toc:a},s="wrapper";function u(e){let{components:t,...r}=e;return(0,o.kt)(s,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"planton-product-microservice-deployment-config"},"planton product microservice deployment config"),(0,o.kt)("p",null,"get microservice deployment config from the code project directory"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"planton product microservice deployment config [flags]\n")),(0,o.kt)("h3",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'      --code-project-dir string   code project directory to read input required for create a microservice deployment resource (default "/Users/swarup/scm/gitlab.com/plantoncode/planton/pcs/microservice/docs/site/docs")\n  -h, --help                      help for config\n      --product-env-name string   name of the product env to setup the microservice deployment input. This value is used to look up env specific config from _devops/deploy directory\n      --with-local                flag to toggle config load to include/exclude deployment config overrides in local.yaml (default true)\n')),(0,o.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"      --debug                               set log level to debug\n      --microservice-deployment-id string   id of the microservice deployment\n      --microservice-id string              id of the microservice\n      --product-env-id string               id of the product environment\n      --product-id string                   id of the product on planton cloud\n      --product-key string                  key of the product\n")))}u.isMDXComponent=!0}}]);