"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7628],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>f});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var a=n.createContext({}),l=function(e){var t=n.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=l(e.components);return n.createElement(a.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,c=e.originalType,a=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),s=l(r),u=o,f=s["".concat(a,".").concat(u)]||s[u]||m[u]||c;return r?n.createElement(f,i(i({ref:t},d),{},{components:r})):n.createElement(f,i({ref:t},d))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=r.length,i=new Array(c);i[0]=u;var p={};for(var a in t)hasOwnProperty.call(t,a)&&(p[a]=t[a]);p.originalType=e,p[s]="string"==typeof e?e:o,i[1]=p;for(var l=2;l<c;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},68011:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>m,frontMatter:()=>c,metadata:()=>p,toc:()=>l});var n=r(87462),o=(r(67294),r(3905));const c={title:"",slug:"/cli//planton/product/microservice/deployment/create",sidebar_label:"create"},i=void 0,p={unversionedId:"cli/planton/product/microservice/deployment/create",id:"cli/planton/product/microservice/deployment/create",title:"",description:"planton product microservice deployment create",source:"@site/docs/99-cli/planton/product/microservice/deployment/create.md",sourceDirName:"99-cli/planton/product/microservice/deployment",slug:"/cli//planton/product/microservice/deployment/create",permalink:"/cli/planton/product/microservice/deployment/create",draft:!1,tags:[],version:"current",frontMatter:{title:"",slug:"/cli//planton/product/microservice/deployment/create",sidebar_label:"create"},sidebar:"defaultSidebar",previous:{title:"config",permalink:"/cli/planton/product/microservice/deployment/config"},next:{title:"deploy",permalink:"/cli/planton/product/microservice/deployment/deploy"}},a={},l=[{value:"planton product microservice deployment create",id:"planton-product-microservice-deployment-create",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3}],d={toc:l},s="wrapper";function m(e){let{components:t,...r}=e;return(0,o.kt)(s,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"planton-product-microservice-deployment-create"},"planton product microservice deployment create"),(0,o.kt)("p",null,"create a microservice deployment to a product env"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"planton product microservice deployment create [flags]\n")),(0,o.kt)("h3",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'      --code-project-dir string       code project directory required to read the deployment config (default "/Users/swarup/scm/gitlab.com/plantoncode/planton/pcs/microservice/docs/site/docs")\n      --container-image string        container image to be set for the deployment config. ex: main, review-1, review-2\n  -h, --help                          help for create\n      --microservice-version string   microservice version to be deployed\n      --output-file string            optional output file path to save the details of the microservice deployment created with this command\n      --product-env-name string       name of the product env required to read the deployment config\n')),(0,o.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"      --debug                               set log level to debug\n      --microservice-deployment-id string   id of the microservice deployment\n      --microservice-id string              id of the microservice\n      --product-env-id string               id of the product environment\n      --product-id string                   id of the product on planton cloud\n      --product-key string                  key of the product\n")))}m.isMDXComponent=!0}}]);