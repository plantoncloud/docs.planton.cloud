"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1620],{3905:(t,e,n)=>{n.d(e,{Zo:()=>s,kt:()=>g});var i=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,i,r=function(t,e){if(null==t)return{};var n,i,r={},o=Object.keys(t);for(i=0;i<o.length;i++)n=o[i],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(i=0;i<o.length;i++)n=o[i],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var p=i.createContext({}),c=function(t){var e=i.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},s=function(t){var e=c(t.components);return i.createElement(p.Provider,{value:e},t.children)},u="mdxType",f={inlineCode:"code",wrapper:function(t){var e=t.children;return i.createElement(i.Fragment,{},e)}},m=i.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,p=t.parentName,s=l(t,["components","mdxType","originalType","parentName"]),u=c(n),m=r,g=u["".concat(p,".").concat(m)]||u[m]||f[m]||o;return n?i.createElement(g,a(a({ref:e},s),{},{components:n})):i.createElement(g,a({ref:e},s))}));function g(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,a=new Array(o);a[0]=m;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=t,l[u]="string"==typeof t?t:r,a[1]=l;for(var c=2;c<o;c++)a[c]=n[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},18989:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>a,default:()=>f,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var i=n(87462),r=(n(67294),n(3905));const o={title:"",slug:"/cli//planton/laptop/mac/git/ssh/config/init",sidebar_label:"init"},a=void 0,l={unversionedId:"cli/planton/laptop/mac/git/ssh/config/init",id:"cli/planton/laptop/mac/git/ssh/config/init",title:"",description:"planton laptop mac git ssh config init",source:"@site/docs/99-cli/planton/laptop/mac/git/ssh/config/init.md",sourceDirName:"99-cli/planton/laptop/mac/git/ssh/config",slug:"/cli//planton/laptop/mac/git/ssh/config/init",permalink:"/cli/planton/laptop/mac/git/ssh/config/init",draft:!1,tags:[],version:"current",frontMatter:{title:"",slug:"/cli//planton/laptop/mac/git/ssh/config/init",sidebar_label:"init"},sidebar:"defaultSidebar",previous:{title:"list",permalink:"/cli/planton/laptop/mac/git/ssh/config/host/list"},next:{title:"init",permalink:"/cli/planton/laptop/mac/git/ssh/init"}},p={},c=[{value:"planton laptop mac git ssh config init",id:"planton-laptop-mac-git-ssh-config-init",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3}],s={toc:c},u="wrapper";function f(t){let{components:e,...n}=t;return(0,r.kt)(u,(0,i.Z)({},s,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"planton-laptop-mac-git-ssh-config-init"},"planton laptop mac git ssh config init"),(0,r.kt)("p",null,"initialize ssh config"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"planton laptop mac git ssh config init [flags]\n")),(0,r.kt)("h3",{id:"options"},"Options"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"  -h, --help   help for init\n")),(0,r.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'      --debug              set log level to debug\n      --host string        git host. ex: github.com (default "gitlab.com")\n      --workspace string   git workspace. this can be user profile name or org/group name. ex: swarupdonepudi or some-github-org-name (default "plantoncode")\n')))}f.isMDXComponent=!0}}]);