"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1152],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>m});var o=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},c=Object.keys(e);for(o=0;o<c.length;o++)r=c[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(o=0;o<c.length;o++)r=c[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var a=o.createContext({}),i=function(e){var t=o.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},d=function(e){var t=i(e.components);return o.createElement(a.Provider,{value:t},e.children)},u="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,c=e.originalType,a=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=i(r),f=n,m=u["".concat(a,".").concat(f)]||u[f]||s[f]||c;return r?o.createElement(m,p(p({ref:t},d),{},{components:r})):o.createElement(m,p({ref:t},d))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=r.length,p=new Array(c);p[0]=f;var l={};for(var a in t)hasOwnProperty.call(t,a)&&(l[a]=t[a]);l.originalType=e,l[u]="string"==typeof e?e:n,p[1]=l;for(var i=2;i<c;i++)p[i]=r[i];return o.createElement.apply(null,p)}return o.createElement.apply(null,r)}f.displayName="MDXCreateElement"},39995:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>p,default:()=>s,frontMatter:()=>c,metadata:()=>l,toc:()=>i});var o=r(87462),n=(r(67294),r(3905));const c={title:"",slug:"/cli//planton/product/code/project/buf",sidebar_label:"buf"},p=void 0,l={unversionedId:"cli/planton/product/code/project/buf",id:"cli/planton/product/code/project/buf",title:"",description:"planton product code project buf",source:"@site/docs/99-cli/planton/product/code/project/buf.md",sourceDirName:"99-cli/planton/product/code/project",slug:"/cli//planton/product/code/project/buf",permalink:"/cli/planton/product/code/project/buf",draft:!1,tags:[],version:"current",frontMatter:{title:"",slug:"/cli//planton/product/code/project/buf",sidebar_label:"buf"},sidebar:"defaultSidebar",previous:{title:"add",permalink:"/cli/planton/product/code/project/add"},next:{title:"clone",permalink:"/cli/planton/product/code/project/clone"}},a={},i=[{value:"planton product code project buf",id:"planton-product-code-project-buf",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3}],d={toc:i},u="wrapper";function s(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,o.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"planton-product-code-project-buf"},"planton product code project buf"),(0,n.kt)("p",null,"open project on buf web console"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"planton product code project buf [flags]\n")),(0,n.kt)("h3",{id:"options"},"Options"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'  -h, --help                 help for buf\n      --project-dir string   project dir. default to current directory ex: /Users/john/scm/gitlab.com/plantoncode/planton/pcs/lib/proto/build (default "/Users/swarup/scm/gitlab.com/plantoncode/planton/pcs/microservice/docs/site/docs")\n')),(0,n.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"      --code-project-id string   id of the code project on planton cloud\n      --debug                    set log level to debug\n      --dry                      dry run gitr commands\n      --product-env-id string    id of the product environment\n      --product-id string        id of the product on planton cloud\n      --product-key string       key of the product\n")))}s.isMDXComponent=!0}}]);