"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7878],{3905:(e,t,n)=>{n.d(t,{Zo:()=>i,kt:()=>m});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},c=Object.keys(e);for(o=0;o<c.length;o++)n=c[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(o=0;o<c.length;o++)n=c[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),a=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},i=function(e){var t=a(e.components);return o.createElement(l.Provider,{value:t},e.children)},u="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,l=e.parentName,i=d(e,["components","mdxType","originalType","parentName"]),u=a(n),f=r,m=u["".concat(l,".").concat(f)]||u[f]||s[f]||c;return n?o.createElement(m,p(p({ref:t},i),{},{components:n})):o.createElement(m,p({ref:t},i))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,p=new Array(c);p[0]=f;var d={};for(var l in t)hasOwnProperty.call(t,l)&&(d[l]=t[l]);d.originalType=e,d[u]="string"==typeof e?e:r,p[1]=d;for(var a=2;a<c;a++)p[a]=n[a];return o.createElement.apply(null,p)}return o.createElement.apply(null,n)}f.displayName="MDXCreateElement"},32122:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>s,frontMatter:()=>c,metadata:()=>d,toc:()=>a});var o=n(87462),r=(n(67294),n(3905));const c={title:"",slug:"/cli//planton/product/code/project/dot-env",sidebar_label:"dot-env"},p=void 0,d={unversionedId:"cli/planton/product/code/project/dot-env",id:"cli/planton/product/code/project/dot-env",title:"",description:"planton product code project dot-env",source:"@site/docs/99-cli/planton/product/code/project/dot-env.md",sourceDirName:"99-cli/planton/product/code/project",slug:"/cli//planton/product/code/project/dot-env",permalink:"/cli/planton/product/code/project/dot-env",draft:!1,tags:[],version:"current",frontMatter:{title:"",slug:"/cli//planton/product/code/project/dot-env",sidebar_label:"dot-env"},sidebar:"defaultSidebar",previous:{title:"delete",permalink:"/cli/planton/product/code/project/delete"},next:{title:"get",permalink:"/cli/planton/product/code/project/get"}},l={},a=[{value:"planton product code project dot-env",id:"planton-product-code-project-dot-env",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3}],i={toc:a},u="wrapper";function s(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,o.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"planton-product-code-project-dot-env"},"planton product code project dot-env"),(0,r.kt)("p",null,"create .env and .env_export files for project"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"planton product code project dot-env [flags]\n")),(0,r.kt)("h3",{id:"options"},"Options"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'  -h, --help                 help for dot-env\n      --project-dir string   project dir. ex: /Users/joe/scm/gitlab.com/plantoncode/planton/ (default "/Users/swarup/scm/gitlab.com/plantoncode/planton/pcs/microservice/docs/site/docs")\n')),(0,r.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"      --code-project-id string   id of the code project on planton cloud\n      --debug                    set log level to debug\n      --dry                      dry run gitr commands\n      --product-env-id string    id of the product environment\n      --product-id string        id of the product on planton cloud\n      --product-key string       key of the product\n")))}s.isMDXComponent=!0}}]);