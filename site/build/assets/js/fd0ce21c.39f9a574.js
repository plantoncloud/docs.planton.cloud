"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9270],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},c=Object.keys(e);for(o=0;o<c.length;o++)n=c[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(o=0;o<c.length;o++)n=c[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var a=o.createContext({}),i=function(e){var t=o.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},d=function(e){var t=i(e.components);return o.createElement(a.Provider,{value:t},e.children)},u="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,a=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=i(n),f=r,m=u["".concat(a,".").concat(f)]||u[f]||s[f]||c;return n?o.createElement(m,p(p({ref:t},d),{},{components:n})):o.createElement(m,p({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,p=new Array(c);p[0]=f;var l={};for(var a in t)hasOwnProperty.call(t,a)&&(l[a]=t[a]);l.originalType=e,l[u]="string"==typeof e?e:r,p[1]=l;for(var i=2;i<c;i++)p[i]=n[i];return o.createElement.apply(null,p)}return o.createElement.apply(null,n)}f.displayName="MDXCreateElement"},36923:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>p,default:()=>s,frontMatter:()=>c,metadata:()=>l,toc:()=>i});var o=n(87462),r=(n(67294),n(3905));const c={title:"",slug:"/cli//planton/product/code/project/clone",sidebar_label:"clone"},p=void 0,l={unversionedId:"cli/planton/product/code/project/clone",id:"cli/planton/product/code/project/clone",title:"",description:"planton product code project clone",source:"@site/docs/99-cli/planton/product/code/project/clone.md",sourceDirName:"99-cli/planton/product/code/project",slug:"/cli//planton/product/code/project/clone",permalink:"/cli/planton/product/code/project/clone",draft:!1,tags:[],version:"current",frontMatter:{title:"",slug:"/cli//planton/product/code/project/clone",sidebar_label:"clone"},sidebar:"defaultSidebar",previous:{title:"buf",permalink:"/cli/planton/product/code/project/buf"},next:{title:"delete",permalink:"/cli/planton/product/code/project/delete"}},a={},i=[{value:"planton product code project clone",id:"planton-product-code-project-clone",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3}],d={toc:i},u="wrapper";function s(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"planton-product-code-project-clone"},"planton product code project clone"),(0,r.kt)("p",null,"clone code projects of a product"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"planton product code project clone [flags]\n")),(0,r.kt)("h3",{id:"options"},"Options"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"  -h, --help   help for clone\n")),(0,r.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"      --code-project-id string   id of the code project on planton cloud\n      --debug                    set log level to debug\n      --dry                      dry run gitr commands\n      --product-env-id string    id of the product environment\n      --product-id string        id of the product on planton cloud\n      --product-key string       key of the product\n")))}s.isMDXComponent=!0}}]);