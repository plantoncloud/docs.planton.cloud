"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7233],{3905:(t,e,r)=>{r.d(e,{Zo:()=>c,kt:()=>g});var n=r(67294);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function s(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function p(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},o=Object.keys(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var l=n.createContext({}),i=function(t){var e=n.useContext(l),r=e;return t&&(r="function"==typeof t?t(e):s(s({},e),t)),r},c=function(t){var e=i(t.components);return n.createElement(l.Provider,{value:e},t.children)},u="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},b=n.forwardRef((function(t,e){var r=t.components,a=t.mdxType,o=t.originalType,l=t.parentName,c=p(t,["components","mdxType","originalType","parentName"]),u=i(r),b=a,g=u["".concat(l,".").concat(b)]||u[b]||d[b]||o;return r?n.createElement(g,s(s({ref:e},c),{},{components:r})):n.createElement(g,s({ref:e},c))}));function g(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=r.length,s=new Array(o);s[0]=b;var p={};for(var l in e)hasOwnProperty.call(e,l)&&(p[l]=e[l]);p.originalType=t,p[u]="string"==typeof t?t:a,s[1]=p;for(var i=2;i<o;i++)s[i]=r[i];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}b.displayName="MDXCreateElement"},80127:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>p,toc:()=>i});var n=r(87462),a=(r(67294),r(3905));const o={title:"",slug:"/cli//planton/stack/build/product/storage/database/postgres/cluster/input",sidebar_label:"input"},s=void 0,p={unversionedId:"cli/planton/stack/build/product/storage/database/postgres/cluster/input",id:"cli/planton/stack/build/product/storage/database/postgres/cluster/input",title:"",description:"planton stack build product storage database postgres cluster input",source:"@site/docs/99-cli/planton/stack/build/product/storage/database/postgres/cluster/input.md",sourceDirName:"99-cli/planton/stack/build/product/storage/database/postgres/cluster",slug:"/cli//planton/stack/build/product/storage/database/postgres/cluster/input",permalink:"/cli/planton/stack/build/product/storage/database/postgres/cluster/input",draft:!1,tags:[],version:"current",frontMatter:{title:"",slug:"/cli//planton/stack/build/product/storage/database/postgres/cluster/input",sidebar_label:"input"},sidebar:"defaultSidebar",previous:{title:"destroy",permalink:"/cli/planton/stack/build/product/storage/database/postgres/cluster/destroy"},next:{title:"outputs",permalink:"/cli/planton/stack/build/product/storage/database/postgres/cluster/outputs"}},l={},i=[{value:"planton stack build product storage database postgres cluster input",id:"planton-stack-build-product-storage-database-postgres-cluster-input",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3}],c={toc:i},u="wrapper";function d(t){let{components:e,...r}=t;return(0,a.kt)(u,(0,n.Z)({},c,r,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"planton-stack-build-product-storage-database-postgres-cluster-input"},"planton stack build product storage database postgres cluster input"),(0,a.kt)("p",null,"get sample input that can be modified to setup the input file for the stack"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"planton stack build product storage database postgres cluster input [flags]\n")),(0,a.kt)("h3",{id:"options"},"Options"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"  -h, --help   help for input\n")),(0,a.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"      --debug               set log level to debug\n      --input-file string   input file path\n")))}d.isMDXComponent=!0}}]);